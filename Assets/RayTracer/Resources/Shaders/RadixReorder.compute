// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel RadixReorder

StructuredBuffer<int> g_InputKeyBuffer;
StructuredBuffer<int> g_InputIndexBuffer;
RWStructuredBuffer<int> g_OutputKeyBuffer;
RWStructuredBuffer<int> g_OutputIndexBuffer;
StructuredBuffer<int> g_HistogramBuffer;
StructuredBuffer<int> g_CountBuffer;

int g_Limit;
int g_KeyShift;

[numthreads(256, 1, 1)]
void RadixReorder(uint3 id : SV_DispatchThreadID)
{
	if (id.x >= g_Limit)
		return;
	int index = g_InputIndexBuffer[id.x];
	int key = g_InputKeyBuffer[id.x];
    int bucket = (key >> g_KeyShift) & 0xF;
	int newIndex = g_CountBuffer[bucket] + g_HistogramBuffer[bucket * g_Limit + id.x];
	g_OutputKeyBuffer[newIndex] = key;
	g_OutputIndexBuffer[newIndex] = index;
}